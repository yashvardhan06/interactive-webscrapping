import requests
from bs4 import BeautifulSoup

def scrape_headlines(url):
    """Scrape headlines from the specified URL."""
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    
    # Extract headlines from h1 and h2 tags
    headlines = [header.get_text(strip=True) for header in soup.find_all(['h1', 'h2'])]
    return headlines

def scrape_prices(url):
    """Scrape prices from the specified URL."""
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    
    # Extract prices from elements with class 'price'
    prices = [price.get_text(strip=True) for price in soup.find_all(class_='price')]
    return prices

def main():
    print("Welcome to the Interactive Web Scraper!")
    
    while True:
        url = input("Enter the website URL to scrape (or 'exit' to quit): ")
        if url.lower() == 'exit':
            print("Exiting the program. Goodbye!")
            break
        
        data_type = input("What type of data would you like to scrape? (headlines/prices): ").strip().lower()
        
        try:
            # Make basic request to check site availability
            response = requests.get(url)
            response.raise_for_status()  # Raise exception for HTTP errors
            
            if data_type == 'headlines':
                data = scrape_headlines(url)
                print("\nScraped Headlines:")
                for idx, headline in enumerate(data, start=1):
                    print(f"{idx}. {headline}")
            elif data_type == 'prices':
                data = scrape_prices(url)
                print("\nScraped Prices:")
                for idx, price in enumerate(data, start=1):
                    print(f"{idx}. {price}")
            else:
                print("Invalid data type. Please choose 'headlines' or 'prices'.")
        
        except requests.exceptions.RequestException as e:
            print(f"Error accessing the URL: {e}")

if __name__ == "__main__":
    main()
